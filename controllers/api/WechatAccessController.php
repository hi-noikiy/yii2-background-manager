<?php
/**
 * Created by PhpStorm.
 * User: moyu
 * Date: 2018/11/24
 * Time: 10:59
 */

namespace app\controllers\api;


use app\models\ExchangeRecord;
use Yii;
use yii\db\Exception;
use app\common\Code;

class WechatAccessController extends BaseController
{
    public $enableCsrfValidation = false;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->redirectUrl = Yii::$app->request->hostInfo . "/api/wechat-access/get-openid";
    }

    public function actionCheckPlayer(){
        $request = $this->checkRequestWay(0);
        if(!isset($request['orderId']) || !$request['orderId']){
            return $this->returnError(Code::PARAM_ERROR,'orderId不合法！');
        }
        $orderId = $request['orderId'];
        $this->redirect("/wechat/check-player?orderId=$orderId");
    }

    public function actionAccess(){
        Yii::info('直兑开始actionAccess');
        $request = $this->checkRequestWay(0);
        if(!isset($request['orderId']) || !$request['orderId']){
            return $this->actionAlert('请输入订单号');
        }
        if(!isset($request['uid']) || !$request['uid']){
            return $this->actionAlert('请输入玩家id');
        }

        $orderId = $request['orderId'];
        $playerId = $request['uid'];
        Yii::info('玩家id：'.$playerId.", 订单id：".$orderId);
        $exchangeRecord = new ExchangeRecord();
        $recordInfo = $exchangeRecord->getRecord(['order_id'=>$orderId,'player_id'=>$playerId],'status,service_charge,amount,order_id,redis_status,create_time',2);
        if(!$recordInfo){
            return $this->actionAlert('订单不存在,请核对玩家id，只有本人分享的地址方可成功！');
        }

        if($recordInfo['redis_status'] == 1){
            return $this->actionAlert('订单已完成！');
        }

        if($recordInfo['status'] != 0){
            return $this->actionAlert('订单已失效！');
        }

        //扣除手续费
        $amount  = floor($recordInfo['amount'] - $recordInfo['service_charge']);
        $orderId = $recordInfo['order_id'];
        Yii::info('扣除手续费后的金额：'.$amount);

        //微信授权获取openid
        $this->actionGetOpenid($orderId,$amount);
    }


    /**
     * 网页授权获取用户openid
     *
     */
    public function actionGetOpenid($orderId,$amount){
        $request = Yii::$app->request;

        $code = $request->get('code');
        $whchat  =Yii::$app->wechat;

        if($code){
            $access_token = $whchat->getOauth2AccessToken($code);
            //Yii::info('微信授权返回：'.$access_token);
            if(!$access_token || !isset($access_token['openid'])){
                $this->returnError(Code::ACCESS_RETURN_ERROR,'网页授权返回失败！');
            }

            $openId = $access_token['openid'];

            $url = Yii::$app->request->hostInfo . "/api/wechat-access/pretreatment-order?orderId=".$orderId.'&amount='.$amount.'&openId='.$openId;
            header("Location:".$url);
            exit;

        }else{
            $url = $whchat->getOauth2AuthorizeUrl($this->redirectUrl.'?orderId='.$orderId.'&amount='.$amount);
            header("Location:".$url);
            exit;
        }
    }

    /**
     * 预下单，将下单信息存入redis，定时任务统一处理
     * @param string $msg
     */
    public function actionPretreatmentOrder(){
        $request = $this->checkRequestWay(2);
        if(!isset($request['orderId']) || !isset($request['amount']) || !isset($request['openId'])){
            $this->returnError(Code::PRETREATMENT_ORDER_ERROR,'订单预处理失败，参数有误!');
        }
        $openId = $request['openId'];
        $amount = $request['amount'];
        $orderId = $request['orderId'];

        try{
            if(Yii::$app->runAction('api/exchange/pay-exchange',['openid'=>$openId,'amount'=>$amount,'order_id'=>$orderId])){
                $this->actionAlert('操作成功,预计2小时内到账！');
            }else{
                $this->actionAlert('操作失败！');
                Yii::info("预下单失败:openid--".$openId.'---金额'.$amount.'--订单id'.$orderId);
            }
        }catch (Exception $exception){
            Yii::info("提现失败:".$exception);
            $this->actionAlert('操作失败失败，请稍后再试！');
        }

    }


    public function actionAlert($msg='订单不存在'){
        // 重写alert方法去掉ios下alert带的url
        echo "<script>
            window.alert = function(name){ 
                    var iframe = document.createElement('IFRAME');
                    iframe.style.display='none';
                    iframe.setAttribute('src', 'data:text/plain,');
                    document.documentElement.appendChild(iframe);
                    window.frames[0].window.alert(name);
                    iframe.parentNode.removeChild(iframe);
             }
             
             window.alert('$msg');
            history.go(-1);
</script>";
    }
}