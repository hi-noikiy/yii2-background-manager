<?php
/**
 * User: SeaReef
 * Date: 2018/12/8 18:28
 *
 * 基础活动分析
 */
namespace app\commands;

use Yii;
use yii\console\Controller;
use yii\db\Query;

class ActivityStatController extends BaseController
{
    /**
     * 基础活动统计
     */
    public function actionBaseInfo($start_time = '', $end_time = '', $channel_id=1)
    {
        $start_time = $start_time ? : date('Y-m-d 00:00:00', time() - 86400);
        $end_time = $end_time ? : date('Y-m-d 23:59:59', time() - 86400);
        $stat_date = date('Y-m-d', strtotime($start_time));
        $table = 'stat_base_activity';

        $under_list = $this->getChannelUnderList($channel_id);

//        首冲
//        $shouchong = (new Query())->from('t_order')->where(['and', 'goods_num', 'status = 1', 'goods_id = 7', "create_time >= '{$start_time}'", "create_time < '{$end_time}'"])->sum('goods_price');
        $shouchong = (new Query())->from('t_order')->where(['and', 'status = 1', 'goods_id = 7', "create_time > '{$start_time}'", "create_time < '{$end_time}'"])->andFilterWhere(['in', 'player_id', $under_list])->count();
        $shouchong = $shouchong * 200;

//        新手
        $xinshou = (new Query())->from('log_user_activity')->where(['and', 'activity_id = 2', 'operate_type = 1', "operate_time >= '{$start_time}'", "operate_time < '{$end_time}'"])->andFilterWhere(['in', 'player_id', $under_list])->count();
        $xinshou = $xinshou * 500;

        $hongbao = (new Query())->from('t_hongbao')->where(['and', "create_time >= '{$start_time}'", "create_time < '{$end_time}'"])->andFilterWhere(['in', 'uid', $under_list])->sum('gold');

        $total = $shouchong + $xinshou + $hongbao;

        $db = Yii::$app->db;
        $db->createCommand()->insert($table, [
            'channel_id' => $channel_id,
            'stat_date' => $stat_date,
            'shouchong' => $shouchong ? : 0,
            'xinshou' => $xinshou ? : 0,
            'hongbao' => $hongbao ? : 0,
            'total' => $total ? : 0,
        ])->execute();
    }

    public function actionPollChannel()
    {
        parent::actionPollChannel(); // TODO: Change the autogenerated stub
    }
}
