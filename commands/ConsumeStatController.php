<?php
/**
 * User: SeaReef
 * Date: 2018/12/8 18:03
 * 消耗分析
 */
namespace app\commands;

use app\common\RedisKey;
use app\common\Tool;
use app\models\Channel;
use app\models\LobbyPlayer;
use app\models\PlayerMember;
use Yii;
use yii\db\Query;

class ConsumeStatController extends BaseController
{
    /**
     * 基础消耗数据统计
     */
    public function actionBaseInfo($start_time = '', $end_time = '', $channel_id=1)
    {
        $start_time = $start_time ? : date('Y-m-d 00:00:00', time() - 86400);
        $end_time = $end_time ? : date('Y-m-d 23:59:59', time() - 86400);
        $stat_date = date('Y-m-d', strtotime($start_time));
        $table_name = 't_gold_record__' . date('Ymd', strtotime($start_time));
        $ts_start_time = strtotime($start_time);
        $ts_end_time = strtotime($end_time);
        $table = 'stat_base_consume';

        $under_list = $this->getChannelUnderList($channel_id);

//        当日消耗、元宝
        $consume = (new Query())->from($table_name)->filterWhere(['in', 'player_id', $under_list])->sum('num');

//        当日淤积、元宝
//        $fillup = (new Query())->from('login_db.t_lobby_player')->where(['and', "reg_time >= '{$start_time}'", "reg_time < '{$end_time}'"])->sum('gold_bar');
        $fillup = (new Query())->from('login_db.t_lobby_player')->filterWhere(['in', 'u_id', $under_list])->sum('gold_bar');

//        玩家提现、元宝
        $tixian = (new Query())->from('t_exchange_record')->where(['and', "create_time >= '{$start_time}'", "create_time < '{$end_time}'", 'status = 1'])->andFilterWhere(['in', 'player_id', $under_list])->sum('amount');

//        代理提现
        $daili_tixian = (new Query())->from('t_pay_order')->where(['and', 'PAY_STATUS = 1', "CREATE_TIME >= '{$ts_start_time}'", "CREATE_TIME < '{$ts_end_time}'"])->andFilterWhere(['in', 'PLAYER_INDEX', $under_list])->sum('PAY_MONEY');

//        机器人入库
        $robot = (new Query())->select('income_gold')->from('log_hundred_game_day_record')->where(['and', "date >= '{$start_time}'", "date < '{$end_time}'"])->scalar();

        $db = Yii::$app->db;
        $db->createCommand()->insert($table, [
            'channel_id' => $channel_id,
            'stat_date' => $stat_date,
            'consume' => $consume ? : 0,
            'fillup' => $fillup ? : 0,
            'tixian' => $tixian ? : 0,
            'daili_tixian' => $daili_tixian ? : 0,
        ])->execute();
    }

    public function actionPollChannel()
    {
        parent::actionPollChannel(); // TODO: Change the autogenerated stub
    }

    /**
     * 大R消耗排行
     */
    public function actionRank($stat_date = '')
    {
        $stat_date = $stat_date ? : date('Y-m-d', time() - 86400);
        $gold_record = 't_gold_record__' . date('Ymd', strtotime($stat_date));

        $data = (new Query())
            ->select(['gid', 'player_id', 'SUM(num) AS `consume`'])
            ->from($gold_record)
            ->groupBy(['gid', 'player_id'])
            ->all();

        $db = Yii::$app->db;
        foreach ($data as $v) {
            $serverFee = (int)$v['consume'];
            $trans = $this->trans($v['gid']);
            $sql = "INSERT INTO log_consume_rank(`player_id`, `{$trans}`, `stat_date`) VALUES ('{$v['player_id']}', '{$serverFee}', '{$stat_date}') ON DUPLICATE KEY UPDATE `{$trans}` = '{$v['consume']}'";

            $db->createCommand($sql)->execute();
        }
    }

    /**
     * 更新每日大R数据
     */
    public function actionUpdateRank($stat_date = '')
    {
        $stat_date = $stat_date ? : date('Y-m-d', time() - 86400);
        $start_time = date('Y-m-d 00:00:00', strtotime($stat_date));
        $end_time = date('Y-m-d 23:59:59', strtotime($stat_date));

        $data1 = (new Query())
            ->select('*')
            ->from('log_consume_rank')
            ->where(['stat_date' => $stat_date])
            ->all();

        $db = Yii::$app->db;

        foreach ($data1 as $v) {
            //当日输赢 = （日总赢元宝数-日总输元宝数-服务费元宝数）/100
            $winLose = (int)(new Query())->select(['counter_res'])->from('oss.t_win_lose')->where(['player_id'=>$v['player_id'],'game_id'=>0,'stat_date'=>$stat_date])->scalar() ?: 0;
            $data['win_lose'] = ($winLose-$v['consume'])/100;

            $player_info = (new Query())->select(['weixin_nickname', 'reg_time'])->from('login_db.t_lobby_player')->where(['u_id' => $v['player_id']])->one();
            $data['player_name'] = $player_info['weixin_nickname'];
            $data['regist'] = $player_info['reg_time'];
            $data['consume'] = ($v['sz'] + $v['br_ttz'] + $v['ps'] +  $v['ttz']) ? : 0;
            $data['recharge'] = (new Query())->from('t_order')->where(['and', 'status = 1', "create_time > '{$start_time}'", "create_time <= '{$end_time}'", "player_id = '{$v['player_id']}'"])->sum('goods_price');
            $data['duihuan'] = round((new Query())->from('t_exchange_record')->where(['and', 'status = 1', "create_time > '{$start_time}'", "create_time <= '{$end_time}'", "player_id = '{$v['player_id']}'"])->sum('amount - service_charge') / 100, 2) ? : 0;
            $data['top_id'] = Tool::top($v['player_id']);
            $data['top_name'] = LobbyPlayer::getNickname($data['top_id']);
            $data['parent_id'] = PlayerMember::getFatherId($v['player_id']) ? : '000';
            if ($data['parent_id'] != '000') {
                $data['parent_name'] = LobbyPlayer::getNickname($data['parent_id']);
            } else {
                $data['parent_name'] = '系统';
            }

            $db->createCommand()->update('log_consume_rank', $data, "id = {$v['id']}")->execute();
        }
    }

    /**
     * 转换gid与表字段
     */
    private function trans($gid)
    {
        $arr = [
            524821 => 'br_ttz',
            524816 => 'sz',
            524818 => 'ps',
            524815 => 'ttz',
        ];

        return $arr[$gid];
    }

    /**
     * 各子游戏、大代理消耗分析
     */
    public function actionSubGameConsume($start_time = '', $end_time = '',$channel_id=1)
    {
        $start_time = $start_time ? : date('Y-m-d 00:00:00', time() - 86400);
        $end_time = $end_time ? : date('Y-m-d 23:59:59', time() - 86400);
        $stat_date = date('Y-m-d', strtotime($start_time));
        $suffix = date('Ymd', strtotime($start_time));
        $table_name = 't_gold_record__' . date('Ymd', strtotime($start_time));
        $brttz_table = 'log_hundred_game_day_record';
        $under_list = $this->getChannelUnderList($channel_id);

        $data = (new Query())
            ->select(['gid', 'SUM(num) AS `num`','COUNT(DISTINCT player_id) AS `player_number`'])
            ->from($table_name)
            ->filterWhere(['in','player_id',$under_list])
            ->groupBy('gid')
            ->all();

        $db = Yii::$app->db;
        foreach ($data as $v) {
            $trans = $this->trans($v['gid']);
            $sql = "INSERT INTO stat_sub_consume(`channel_id`,`stat_date`, `{$trans}`) VALUES ($channel_id,'{$stat_date}', '{$v['num']}') ON DUPLICATE KEY UPDATE `{$trans}` = '{$v['num']}'";
            $db->createCommand($sql)->execute();

            $sql2 = "INSERT INTO stat_sub_consume(`channel_id`,`stat_date`,`{$trans}_player_number`) VALUES ($channel_id,'{$stat_date}','{$v['player_number']}') ON DUPLICATE KEY UPDATE `{$trans}_player_number` = '{$v['player_number']}'";
            $db->createCommand($sql2)->execute();

            if($trans.'_player_number' == 'br_ttz_player_number' && $channel_id == 1){
                $bwTtzPlayerNumber = (new Query())->select('player_num')->from($brttz_table)->where(['date'=>$stat_date." 00:00:00",'gid'=>'524821'])->scalar();
                $sql2 = "INSERT INTO stat_sub_consume(`channel_id`,`stat_date`,`{$trans}_player_number`) VALUES ($channel_id,'{$stat_date}','{$bwTtzPlayerNumber}') ON DUPLICATE KEY UPDATE `{$trans}_player_number` = '{$bwTtzPlayerNumber}'";
                $db->createCommand($sql2)->execute();
            }
        }

        $consume = (new Query())->from($table_name)->filterWhere(['in','player_id',$under_list])->sum('num');
        $sql = "INSERT INTO stat_sub_consume(`channel_id`,`stat_date`, `consume`) VALUES($channel_id,'{$stat_date}', '{$consume}') ON DUPLICATE KEY UPDATE `consume` = '{$consume}'";
        $db->createCommand($sql)->execute();

        $redis = Yii::$app->redis;
        $gg = $redis->hget(RedisKey::INF_UNDER_DAY_CONSUME . $suffix, '30601818') ?: 0;
        $sql = "INSERT INTO stat_sub_consume(`channel_id`,`stat_date`, `gg`) VALUES($channel_id,'{$stat_date}', '{$gg}') ON DUPLICATE KEY UPDATE `gg` = '{$gg}'";

        $db->createCommand($sql)->execute();
    }

    public function actionUpdateSubGameConsume(){
        $channel_id=1;
        $date = ['2019-01-21','2019-01-20','2019-01-19','2019-01-18','2019-01-17','2019-01-16','2019-01-15','2019-01-14','2019-01-13','2019-01-12','2019-01-11','2019-01-10','2019-01-09','2019-01-08','2019-01-07','2019-01-06','2019-01-05','2019-01-04','2019-01-03','2019-01-02','2019-01-01'];
        $trans='br_ttz';
        $db = Yii::$app->db;
        foreach ($date as $stat_date){
            $bwTtzPlayerNumber = (new Query())
                ->select('player_num')
                ->from('log_hundred_game_day_record')
                ->where(['date'=>$stat_date." 00:00:00",'gid'=>'524821'])
                ->scalar();
            $sql2 = "INSERT INTO stat_sub_consume(`channel_id`,`stat_date`,`{$trans}_player_number`) VALUES ($channel_id,'{$stat_date}','{$bwTtzPlayerNumber}') ON DUPLICATE KEY UPDATE `{$trans}_player_number` = '{$bwTtzPlayerNumber}'";

            $db->createCommand($sql2)->execute();
            echo 11;exit;
        }
    }

    public function actionPollChannelSubGameConsume()
    {
        $channelModel = new Channel();
        $channelList = $channelModel->getDataByCon($con=[]);

        foreach ($channelList as $key=>$val){
            $this->actionSubGameConsume('','',$val['channel_id']);
        }
    }

}